{"remainingRequest":"/Users/roywang/Documents/GitHub/firebase_storage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/roywang/Documents/GitHub/firebase_storage/src/views/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/roywang/Documents/GitHub/firebase_storage/src/views/Search.vue","mtime":1568232853818},{"path":"/Users/roywang/Documents/GitHub/firebase_storage/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/roywang/Documents/GitHub/firebase_storage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/roywang/Documents/GitHub/firebase_storage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport firebase from \"@/firebaseConfig.js\";\nimport { mapState } from \"vuex\";\nimport { mapGetters } from \"vuex\";\nconst firestore = firebase.firestore;\nexport default {\n  created() {},\n  computed: {\n    ...mapState([\"favoriteInfo\", \"searchResults\", \"hasSearched\"]),\n    ...mapGetters([\"currentUserCollectionRef\"])\n  },\n  data() {\n    return {\n      keyword: \"\"\n    };\n  },\n  methods: {\n    keywordkeydown(e) {\n      if (e.keyCode === 13) {\n        this.search();\n      }\n    },\n    search() {\n      this.$store.dispatch(\"traverseStorage\", { keyword: this.keyword });\n    },\n    openFolder(path) {\n      const segs = path.split(\"/\");\n      segs.shift();\n      segs.shift();\n      if (segs[segs.length - 1].includes(\".\")) {\n        segs.pop();\n      }\n      this.$store.dispatch(\"setFolder\", segs);\n      this.$router.push(\"storage\");\n    },\n    showInfo() {\n      this.favoriteInfo.paths.forEach(path => {\n        const ref = firebase.storage().ref;\n      });\n      console.log(\"hi\");\n    },\n    pathToInfo(path) {\n      const fileString = path.slice(path.lastIndexOf(\"/\") + 1);\n      if (fileString.includes(\".\")) {\n        return {\n          name: fileString,\n          type: \"file\"\n        };\n      }\n      return {\n        name: fileString,\n        type: \"folder\"\n      };\n    }\n  }\n};\n",{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"search-wrapper\">\n    <div class=\"keyword-search\">\n      <div class=\"title\">\n        <span>Keyword&nbsp;</span>\n        <input\n          class=\"keyword-input\"\n          type=\"text\"\n          v-model=\"keyword\"\n          placeholder=\"Enter keyword\"\n          @keydown=\"keywordkeydown\"\n        />\n        <i @click=\"search\" class=\"fas fa-search search-btn\"></i>\n      </div>\n      <div v-if=\"hasSearched || hasSearched === ''\" class=\"result-keyword\">\n        &nbsp;Searching results for\n        <span>{{hasSearched}}</span> :\n      </div>\n      <div\n        v-if=\"result.name != 'folderInitDoc.txt'\"\n        class=\"link\"\n        v-for=\"result in searchResults\"\n        @dblclick=\"openFolder(result.location.path_)\"\n      >\n        <i\n          class=\"fas\"\n          :class=\"{'fa-file':result.type === 'file','fa-folder':result.type === 'folder'}\"\n        >&nbsp;{{result.name}}</i>\n      </div>\n    </div>\n    <div v-if=\"favoriteInfo\" class=\"favorites\">\n      <div class=\"title\">\n        <span>Bookmarks&nbsp;</span>\n        <i class=\"fas fa-star\"></i>\n      </div>\n      <div v-for=\"path in favoriteInfo.paths\" class=\"link\" @dblclick=\"openFolder(path)\">\n        <i\n          class=\"fas\"\n          :class=\"{'fa-file':pathToInfo(path).type === 'file','fa-folder':pathToInfo(path).type === 'folder'}\"\n        >&nbsp;{{pathToInfo(path).name}}</i>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport firebase from \"@/firebaseConfig.js\";\nimport { mapState } from \"vuex\";\nimport { mapGetters } from \"vuex\";\nconst firestore = firebase.firestore;\nexport default {\n  created() {},\n  computed: {\n    ...mapState([\"favoriteInfo\", \"searchResults\", \"hasSearched\"]),\n    ...mapGetters([\"currentUserCollectionRef\"])\n  },\n  data() {\n    return {\n      keyword: \"\"\n    };\n  },\n  methods: {\n    keywordkeydown(e) {\n      if (e.keyCode === 13) {\n        this.search();\n      }\n    },\n    search() {\n      this.$store.dispatch(\"traverseStorage\", { keyword: this.keyword });\n    },\n    openFolder(path) {\n      const segs = path.split(\"/\");\n      segs.shift();\n      segs.shift();\n      if (segs[segs.length - 1].includes(\".\")) {\n        segs.pop();\n      }\n      this.$store.dispatch(\"setFolder\", segs);\n      this.$router.push(\"storage\");\n    },\n    showInfo() {\n      this.favoriteInfo.paths.forEach(path => {\n        const ref = firebase.storage().ref;\n      });\n      console.log(\"hi\");\n    },\n    pathToInfo(path) {\n      const fileString = path.slice(path.lastIndexOf(\"/\") + 1);\n      if (fileString.includes(\".\")) {\n        return {\n          name: fileString,\n          type: \"file\"\n        };\n      }\n      return {\n        name: fileString,\n        type: \"folder\"\n      };\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.search-wrapper {\n  padding: 20px;\n  box-shadow: 0 0 3px black;\n  background-color: var(--c-main);\n  min-height: calc(100vh - 63px);\n}\n.keyword-search,\n.favorites {\n  background-color: white;\n  width: auto;\n  margin: var(--g-m) auto;\n  padding: var(--g-m);\n  border-radius: var(--g-l);\n  box-shadow: 0 0 5px inset black;\n  max-width: 1115px;\n  margin-top: var(--g-l);\n  display: flex;\n  flex-flow: column;\n}\n.search-btn {\n  color: var(--c-label);\n  &:hover {\n    cursor: pointer;\n    color: gray;\n  }\n  &:active {\n    color: black;\n  }\n}\n.keyword-input {\n  outline: none;\n  border: 0;\n  flex: 0;\n  border-radius: 2em;\n  box-shadow: 0 0 3px black inset;\n  padding: var(--g-m) var(--g-l);\n  margin: var(--g-m);\n  transition: flex-grow 0.5s;\n  &:focus {\n    // flex-grow: 1;\n    box-shadow: 0 0 5px black inset;\n  }\n  &::placeholder {\n    color: var(--c-label);\n  }\n}\n.result-keyword {\n  color: var(--c-label);\n  font-size: var(--fs-s);\n  padding: var(--g-m);\n  padding-left: var(--g-l);\n  span {\n    color: black;\n    font-weight: bold;\n    margin: 0 var(--g-s);\n    text-decoration: underline;\n  }\n}\n.title {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding-left: var(--g-l);\n  position: relative;\n  i {\n    margin: var(--g-s) 0;\n    padding: var(--g-s);\n\n    font-size: var(--fs-l);\n    font-weight: bold;\n    text-align: center;\n  }\n  .fa-star {\n    color: var(--c-highlight);\n  }\n  span {\n    font-size: var(--fs-l);\n    vertical-align: middle;\n    color: var(--c-label);\n  }\n}\n.link {\n  margin: var(--g-s) var(--g-l);\n  padding: var(--g-s);\n  padding-left: var(--g-l);\n  border-radius: var(--g-m);\n  font-family: \"font awesome 5 pro\", var(--ff);\n  font-size: var(--fs-s);\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0 0 3px black;\n  }\n  &:active {\n    box-shadow: 0 0 3px black inset;\n  }\n  &.selected {\n    box-shadow: 0 0 5px black inset;\n  }\n}\n</style>"]}]}